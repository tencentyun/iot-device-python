name: PyPi Publish

on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - 'LICENSE'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python setup.py check
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Unittest TestCase
      env:
        PROVISIONING_PASSWORD: ${{ secrets.GPG_DECRYPT_PASSPHRASE }}
      run: |
        python -m venv test_env
        source test_env/bin/activate
        python setup.py install
        pip install -r requirements.txt
        gpg --quiet -d --passphrase "$PROVISIONING_PASSWORD" --batch .github/files/explorer/device_info.json.asc > explorer/sample/device_info.json
        gpg --quiet -d --passphrase "$PROVISIONING_PASSWORD" --batch .github/files/hub/device_info.json.asc > hub/sample/device_info.json
        python explorer/sample/test.py
        python hub/sample/test.py

    - name: Publish to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.IOT_TEST_PYPI_UPLOAD_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository-url https://test.pypi.org/legacy/ dist/*
        
    - name: Publish to PyPI
      if: startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.IOT_PYPI_UPLOAD_TOKEN }}
      run: |
        rm -rf dist/
        sed -i "s#resp = urllib.request.*#resp = urllib.request.urlopen(f\'https://pypi.org/pypi/{name}/json\')#g" setup.py
        
        python setup.py sdist bdist_wheel
        twine upload dist/*
